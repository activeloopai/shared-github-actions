name: Deep Lake full tests

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      ref:
        required: true
        type: string
    secrets:
      token:
        required: true
      aws_role_arn:
        required: true
      gcp_sa_credentials_json:
        required: true
      oauth_client_id:
        required: true
      oauth_client_secret:
        required: true
      oauth_refresh_token:
        required: true
      hub_username:
        required: true
      hub_password:
        required: true
      kaggle_username:
        required: true
      kaggle_key:
        required: true
      azure_creds_json:
        required: true
      sonar_token: 
        required: false

jobs:
  full-test:
    name: Python ${{ matrix.python-version }} - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        os:
          - ubuntu-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.ref }}
          token: ${{ secrets.token }}
          fetch-depth: 0

      - name: Checkout the buH source code
        uses: actions/checkout@v3
        with:
          path: buH
          repository: activeloopai/buH
          token: ${{ secrets.token }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('deeplake/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - uses: actions/cache@v3
        if: startsWith(runner.os, 'Windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('deeplake/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup FFmpeg Windows
        uses: FedericoCarboni/setup-ffmpeg@v2
        if: startsWith(runner.os, 'Windows')
        with:
          token: ${{ secrets.token }}

      - name: Setup FFmpeg Linux
        if: startsWith(runner.os, 'Linux')
        run: sudo apt-get update && sudo apt-get install  -y ffmpeg libavcodec-dev libavformat-dev libswscale-dev libavdevice-dev libavfilter-dev

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.aws_role_arn }}
          aws-region: us-east-1
          role-duration-seconds: 21600
          role-session-name: deeplake-${{ github.sha }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1.1.1
        with:
          credentials_json: ${{ secrets.gcp_sa_credentials_json }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure_creds_json }}
      - name: Install requirements
        run: |
          pip3 install --upgrade pip --user
          pip3 install --upgrade setuptools
          pip3 install -r deeplake/requirements/common.txt
          pip3 install -r deeplake/requirements/tests.txt
          pip3 install -r deeplake/requirements/plugins.txt
          pip3 install -e .[all]
        env:
          BUGGER_OFF: "true"

      - name: Run tests full
        run: |
          python3 -m pytest --local --cov-report=xml --cov=./ --hub-cloud --s3 --gcs --azure --gdrive --ignore-glob=buH/*
        env:
          GDRIVE_CLIENT_ID: ${{ secrets.oauth_client_id }}
          GDRIVE_CLIENT_SECRET: ${{ secrets.oauth_client_secret }}
          GDRIVE_REFRESH_TOKEN: ${{ secrets.oauth_refresh_token }}
          ENV_HUB_DEV_PASSWORD: ${{ secrets.hub_password }}
          ACTIVELOOP_HUB_USERNAME: ${{ secrets.hub_username }}
          ACTIVELOOP_HUB_PASSWORD: ${{ secrets.hub_password }}
          KAGGLE_USERNAME: ${{ secrets.kaggle_username }}
          KAGGLE_KEY: ${{ secrets.kaggle_key }}

      - name: SonarCloud Scan
        if: matrix.os == 'ubuntu-latest' && matrix.python_version == '3.10' && secrets.sonar_token
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          SONAR_TOKEN: ${{ secrets.sonar_token }}

      - name: Run backwards compatibility tests
        run: |
          pip3 install -e buH
          sh buH/buh/scripts/create_all.sh
          pip3 install --upgrade --force-reinstall -e .
          python3 -m pytest buH/
        env:
          ENV_HUB_DEV_PASSWORD: ${{ secrets.hub_password }}
          ACTIVELOOP_HUB_USERNAME: ${{ secrets.hub_username }}
          ACTIVELOOP_HUB_PASSWORD: ${{ secrets.hub_password }}
          KAGGLE_USERNAME: ${{ secrets.kaggle_username }}
          KAGGLE_KEY: ${{ secrets.kaggle_key }}

      - name: Upload coverage to codecov
        if: startsWith(runner.os, 'Linux')
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON

  full-test-macos:
      name: Python ${{ matrix.python-version }} - ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        fail-fast: false
        matrix:
          python-version:
            - '3.9'
          os:
            - macos-latest
      steps:
        - uses: actions/checkout@v3
          with:
            repository: ${{ inputs.repo }}
            ref: ${{ inputs.ref }}
            token: ${{ secrets.token }}

        - name: Checkout the buH source code
          uses: actions/checkout@v3
          with:
            path: buH
            repository: activeloopai/buH
            token: ${{ secrets.token }}

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}

        - uses: actions/cache@v3
          with:
            path: ~/Library/Caches/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('deeplake/requirements/*.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-

        - name: Setup FFmpeg Mac
          run: |
            brew install ffmpeg@4
            brew link ffmpeg@4
            echo 'export PATH="/usr/local/opt/ffmpeg@4/bin:$PATH"' >> /Users/runner/.bash_profile
            export LDFLAGS="-L/usr/local/opt/ffmpeg@4/lib"
            export CPPFLAGS="-I/usr/local/opt/ffmpeg@4/include"
            export PKG_CONFIG_PATH="/usr/local/opt/ffmpeg@4/lib/pkgconfig"

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v2
          with:
            role-to-assume: ${{ secrets.aws_role_arn }}
            aws-region: us-east-1
            role-duration-seconds: 21600
            role-session-name: deeplake-${{ github.sha }}

        - name: Authenticate to Google Cloud
          uses: google-github-actions/auth@v1.1.1
          with:
            credentials_json: ${{ secrets.gcp_sa_credentials_json }}
            create_credentials_file: true
            export_environment_variables: true

        - name: Azure login
          uses: azure/login@v1
          with:
            creds: ${{ secrets.azure_creds_json }}
        - name: Install requirements
          run: |
            pip3 install --upgrade pip --user
            pip3 install --upgrade setuptools
            pip3 install -r deeplake/requirements/common.txt
            pip3 install -r deeplake/requirements/tests.txt
            pip3 install -r deeplake/requirements/plugins.txt
            pip3 install -e .[all]
          env:
            BUGGER_OFF: "true"

        - name: Run tests full
          run: |
            python3 -m pytest --local --cov-report=xml --cov=./ --hub-cloud --s3 --gcs --azure --gdrive --ignore-glob=buH/*
          env:
            GDRIVE_CLIENT_ID: ${{ secrets.oauth_client_id }}
            GDRIVE_CLIENT_SECRET: ${{ secrets.oauth_client_secret }}
            GDRIVE_REFRESH_TOKEN: ${{ secrets.oauth_refresh_token }}
            ENV_HUB_DEV_PASSWORD: ${{ secrets.hub_password }}
            ACTIVELOOP_HUB_USERNAME: ${{ secrets.hub_username }}
            ACTIVELOOP_HUB_PASSWORD: ${{ secrets.hub_password }}
            KAGGLE_USERNAME: ${{ secrets.kaggle_username }}
            KAGGLE_KEY: ${{ secrets.kaggle_key }}

        - name: Run backwards compatibility tests
          run: |
            pip3 install -e buH
            sh buH/buh/scripts/create_all.sh
            pip3 install --upgrade --force-reinstall -e .
            python3 -m pytest buH/
          env:
            ENV_HUB_DEV_PASSWORD: ${{ secrets.hub_password }}
            ACTIVELOOP_HUB_USERNAME: ${{ secrets.hub_username }}
            ACTIVELOOP_HUB_PASSWORD: ${{ secrets.hub_password }}
            KAGGLE_USERNAME: ${{ secrets.kaggle_username }}
            KAGGLE_KEY: ${{ secrets.kaggle_key }}
